import "hash"
include "whitelist.yara"

/*
    Detect:
        - phpencode.org
        - http://www.pipsomania.com/best_php_obfuscator.do
        - http://atomiku.com/online-php-code-obfuscator/
        - http://www.webtoolsvn.com/en-decode/
        - http://obfuscator.uk/example/
        - http://w3webtools.com/encode-php-online/
        - http://www.joeswebtools.com/security/php-obfuscator/
        - https://github.com/epinna/weevely3
        - http://cipherdesign.co.uk/service/php-obfuscator
        - http://sysadmin.cyklodev.com/online-php-obfuscator/
        - http://mohssen.org/SpinObf.php
        - https://code.google.com/p/carbylamine/
        - https://github.com/tennc/webshell
*/

global private rule IsPhp
{
    strings:
        $php = /<\?[^x]/

    condition:
        $php and filesize < 5MB
}

private rule IRC
{
    strings:
        $user = "USER" fullword
        $pass = "PASS" fullword
        $privmsg = "PRIVMSG" fullword
        $mode = "MODE" fullword
        $ping = "PING" fullword
        $pong = "PONG" fullword
        $join = "JOIN" fullword
        $part = "PART" fullword

    condition:
        5 of them
}

private rule CloudFlareBypass
{
    strings:
        $chk_jschl = "chk_jschl"
        $jschl_vc = "jschl_vc"
        $jschl_answer = "jschl_answer"

    condition:
        2 of them // Better be safe than sorry
}

rule ObfuscatedPhp
{
    strings:
        $eval = /(<\?php\s*\n*\r*|[;{}])\s*@?(eval|preg_replace|system|exec|assert|passthru|win_shell_execute)/  // ;eval( <- this is dodgy
        $b374k = "'ev'.'al'"
        $align = /(\$\w+=[^;]*)*;\$\w+=@?\$\w+\(/  //b374k
        $oneliner = /<\?php\s*\n*\r*\s*@?(eval|preg_replace|system|exec|assert|passthru|win_shell_execute)\(/
        $weevely3 = /\$\w=\$[a-zA-Z]\('',\$\w\);\$\w\(\);/  // weevely3 launcher
        $c99_launcher = /;\$\w+\(\$\w+(,\s?\$\w+)+\);/  // http://bartblaze.blogspot.fr/2015/03/c99shell-not-dead.html
        $strange_arg = /\${\$[0-9a-zA-z]+}/
        $too_many_chr = /(chr\([\d]+\)\.){2,}/
        $many_comments = /\/\*.{,28}\*\/[^\/]*\/\*/  // Something like as/* */ser/* */t
    condition:
        any of them and not IsWhitelisted
}

private rule base64
{
    strings:
        $eval = "ZXZhbCg"
        $system = "c3lzdGVt"
        $preg_replace = "cHJlZ19yZXBsYWNl"
        $exec = "ZXhlYyg"
        $base64_decode = "YmFzZTY0X2RlY29kZ"
    condition:
        any of them
}

private rule hex
{
    strings:
      $eval = "\\x65\\x76\\x61\\x6C\\x28" nocase
      $exec = "\\x65\\x78\\x65\\x63" nocase
      $system = "\\x73\\x79\\x73\\x74\\x65\\x6d" nocase
      $preg_replace = "\\x70\\x72\\x65\\x67\\x5f\\x72\\x65\\x70\\x6c\\x61\\x63\\x65" nocase
      $http_user_agent = "\\x48\\124\\x54\\120\\x5f\\125\\x53\\105\\x52\\137\\x41\\107\\x45\\116\\x54" nocase
    
    condition:
        any of them
}

rule SuspiciousEncoding
{
    condition:
        base64 or hex
}

rule DodgyPhp
{
    strings:
        $vars = /\$__+/ // $__ is rarely used in legitimate scripts
        $double_encoding = /(base64_decode\s*\(\s*){2}/
        $execution = /(eval|assert|passthru|exec|system|win_shell_execute|base64_decode)\s*\(\s*(base64_decode|php:\/\/input|str_rot13|gz(inflate|uncompress)|getenv|pack|\\?\$_(GET|REQUEST|POST|COOKIE))/
        $basedir_bypass = /(curl_init\([\"']file:[\"']|file:file:\/\/)/
        $safemode_bypass = /\x00\/\.\.\/|LD_PRELOAD/
        $shellshock = /putenv\(["']PHP_[^=]=\(\) { [^}] };/
        $restore_bypass = /ini_restore\(['"](safe_mode|open_basedir|disable_function|safe_mode_exec_dir|safe_mode_include_dir|register_globals)['"]\)/
        $ini_get = /ini_get\(['"](safe_mode|open_basedir|disable_function|safe_mode_exec_dir|safe_mode_include_dir|register_globals)['"]\)/
     
        $various = "<!--#exec cmd="  //http://www.w3.org/Jigsaw/Doc/User/SSI.html#exec
        $pr = /(preg_replace(_callback)?|mb_ereg_replace|preg_filter)\s*\(['"]\/[^\/]*\/e['"]/  // http://php.net/manual/en/function.preg-replace.php
        $include = /include\([^\.]+\.(png|jpg|gif|bmp)/  // Clever includes
        $htaccess = "SetHandler application/x-httpd-php"
        $udp_dos = /sockopen\s*\(['"]udp:\/\//
        $iniset_urlinclude = /ini_set\('allow_url_include,\ * 1'\)/
        $iis_com = /IIS:\/\/localhost\/w3svc/
        $user_function = /(call_user_func|create_function)/
        $disable_magic_quotes = /set_magic_quotes_runtime\(0\)/


    condition:
        (any of them or CloudFlareBypass) and not IsWhitelisted
}

rule DangerousPhp
{
    strings:
        $system = "system" fullword  // localroot bruteforcers have a lot of this

        $exec = "exec" fullword
        $eval = "eval" fullword
        $shell_exec = "shell_exec" fullword
        $passthru = "passthru" fullword
        $posix_getuid = "posix_getuid" fullword
        $posix_geteuid = "posix_geteuid" fullword
        $posix_getgid = "posix_getgid" fullword
        $phpinfo = "phpinfo" fullword
        $backticks = "backticks" fullword
        $proc_open = "proc_open" fullword
        $win_shell_execute = "win_shell_execute" fullword
        $win32_create_service = "win32_create_service" fullword
        $posix_getpwuid = "posix_getpwuid" fullword
        $shm_open = "shm_open" fullword
        $assert = "assert" fullword
        $fsockopen = "fsockopen" fullword
        $function_exists = "function_exists" fullword
        $getmygid = "getmygid" fullword
        $php_uname = "php_uname" fullword
        $socket_create = "socket_create(AF_INET, SOCK_STREAM, SOL_TCP)"
        $fpassthru = "fpassthru" fullword
        $posix_setuid = "posix_setuid" fullword
        $xmlrpc_decode = "xmlrpc_decode" fullword
        $show_source = "show_source" fullword
        $pcntl_exec = "pcntl_exec" fullword
        $array_filter = "array_filter" fullword
        $call_user_func = "call_user_func" fullword
        $register_shutdown_function = "register_shutdown_function" fullword
        $register_tick_function = "register_tick_function" fullword
        $ob_start = /ob_start\s*\(\s*[^\)]/  //ob_start('assert'); echo $_REQUEST['pass']; ob_end_flush();
        $mb_ereg_replace_callback = "mb_ereg_replace_callback" fullword
        $preg_replace_callback = "preg_replace_callback" fullword

        $whitelist = /escapeshellcmd|escapeshellarg/

    condition:
        not $whitelist and (5 of them or #system > 250) and not IsWhitelisted
}

rule DodgyStrings
{
    strings:
        $dots = "/../../../"
        $bin_bash = /\/bin\/(ba)?sh/ fullword
        $passwd = "/etc/passwd"
        $proftpd = "/etc/proftpd.conf"
        $resol = "/etc/resolv.conf"
        $shadow = "/etc/shadow"
        $syslog = "/etc/syslog.conf"
        $cpuinfo = "/proc/cpuinfo" fullword
        $system32 = "/windows/system32/"
        $wscript = "WScript.Shell"
        $winExec = "WinExec"
        $b374k = "b374k" fullword nocase
        $backdoor = "backdoor" fullword nocase
        $c99shell = "c99shell" fullword nocase
        $cmd = "cmd.exe" fullword nocase
        $defaced = "defaced" fullword nocase
        $exploit = "exploit" fullword nocase
        $find = "find . -type f" fullword
        $hack = /hack(ing|er)/ nocase
        $hashcrack = "hashcrack" nocase
        $rsa = "id_rsa" fullword
        $ipconfig = "ipconfig" fullword nocase
        $kingdefacer = "kingdefacer" nocase
        $locus7s = "locus7s" nocase
        $ls = "ls -la" fullword
        $nc = "nc -l" fullword
        $ps = "ps -aux" fullword
        $rootkit = "rootkit" fullword nocase
        $slowloris = "slowloris" fullword nocase
        $uname = "uname -a" fullword
        $warez = "warez" fullword nocase
        $webshell = /(reverse|web)\s*shell/ nocase

        $vbs = /language\s*=\s*vbscript/ nocase
        $asp = "scripting.filesystemobject" nocase

    condition:
        IRC or 2 of them and not IsWhitelisted
}

rule Websites
{
    strings:
        $1137day = "1337day.com"
        $antichat = "antichat.ru"
        $ccteam = "ccteam.ru"
        $crackfor = "crackfor" nocase
        $darkc0de = "darkc0de" nocase
        $egyspider = "egyspider.eu"
        $exploit = "exploit-db.com"
        $fopo = "fopo.com.ar"  /* Free Online Php Obfuscator */
        $hashchecker = "hashchecker.com"
        $hashkiller = "hashkiller.com" nocase
        $md5crack = "md5crack.com"
        $md5decrypter = "md5decrypter.com"
        $milw0rm = "milw0rm.com"
        $packetstormsecurity = "packetstormsecurity" nocase
        $rapid7 = "rapid7.com"
        $securityfocus = "securityfocus" nocase
        $shodan = "shodan.io"

    condition:
        any of them and not IsWhitelisted
}
