#!/usr/bin/env bash


YARA=$(type -P yara)
CONFIG_PATH='/etc/phpmalwarefinder/common.yara'
IONICE_BIN=$(type -P ionice)
NICE_BIN=$(type -P nice)
# Defaults looks for php files
FORMAT='php'

if [ ! -x "$YARA" ]
then
    YARA='./yara'
    if [ ! -x "$YARA" ]
    then
        echo "Unable to find yara in your PATH, and in the current directory."
        exit 0
    fi
fi

if [ ! -f "$CONFIG_PATH" ]
then
    OLD_PATH=$CONFIG_PATH
    CONFIG_PATH='./common.yara'
    if [ ! -f "$CONFIG_PATH" ]
    then
        echo "Unable to find 'common.yara' in $OLD_PATH, and in the current directory."
        exit 0
    fi
fi

if [ -x "${IONICE_BIN}" ]
then
    NICE=${IONICE_BIN}
    NICE_OPTS="-c 3"
else
    if [ -x "${NICE_BIN}" ]
    then
        NICE=${NICE_BIN}
        NICE_OPTS="-n 20"
    fi
fi

# before starting yara, check if the file
one_line_trick() {

    case $FORMAT in
        'asp')
            EXT='*.asp'
            ;;
        *)
            EXT='*.ph*'
            ;;
    esac

    find "$@" -type f -iname $EXT -print0  | while IFS= read -r -d '' -r file; do
     read -r lines _ chars _ <<< $(wc "$file")
     
     if [ "$lines" -le "2" ]; then
        # humm, 2 lines long file ?
        if [ "$chars" -ge "300" ]; then
            echo "TooShort $file"
        fi;
    fi;
  done;

}

show_help() {
    cat << EOF
Usage ${0##*/} [-cfhtva] <file|folder> ...
    -c  Optional path to a configuration file
    -f  Fast mode
    -h  Show this help message
    -t  Specify the number of threads to use (8 by default)
    -v  Verbose mode
    -a  Check for ASP malwares instead of PHP
EOF
}

OPTIND=1
while getopts "c:fht:va" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        f)
            OPTS="${OPTS} -f"
            ;;
        c)
            CONFIG_PATH=${OPTARG}
            ;;
        t)
            OPTS="${OPTS} --threads=${OPTARG}"
            ;;
        v)
            OPTS="${OPTS} -s"
            ;;
        a)
            FORMAT='asp'
            ;;
        '?')
            show_help
            exit 1
            ;;
    esac
done
shift "$((OPTIND-1))"

if [ ! -e ${YARA} ]
then
    echo "Can't find yara. Did you installed it?"
    exit 1
fi

if [ ! -e "${CONFIG_PATH}" ]
then
    echo "${CONFIG_PATH} doesn't exist. Please give me a valid file."
    exit 1
fi

if [ -z "$@" ]
then
    show_help
    exit 1
fi

if [ ! -e "${NICE}" ]
then
    echo "No nice program available. Please install ionice or nice."
    exit 1
fi


one_line_trick "$@"

# Include correct yara rule
CONFIG_PATH=${CONFIG_PATH%/*}/
OPTS="${OPTS} -r ${CONFIG_PATH}${FORMAT}.yara"

# Execute rules
${NICE} ${NICE_OPTS} $YARA $OPTS "$@"
